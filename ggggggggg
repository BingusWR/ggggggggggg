-- Create the GUI Frame
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.ResetOnSpawn = false -- Prevent GUI from resetting on player death

local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local HeadThrowButton = Instance.new("TextButton")
local FloatingHeadButton = Instance.new("TextButton")
local CrouchButton = Instance.new("TextButton")
local BangButton = Instance.new("TextButton")
local FreakyLegsButton = Instance.new("TextButton")
local FreakylayButton = Instance.new("TextButton")
local StopAnimationsButton = Instance.new("TextButton") -- Button to stop all animations

-- Parent the GUI to the Player's ScreenGui
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
-- Frame properties
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 0
Frame.Position = UDim2.new(0.351, 0, 0.29, 0)
Frame.Size = UDim2.new(0, 416, 0, 296)

local dragging = false
local dragInput, dragStart, startPos

-- Update the position of the frame based on the drag input
local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

-- Handle when the input starts
Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

-- Handle when the input changes (for mouse movement or touch movement)
Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

-- Update the frame's position if it's being dragged
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        update(input)
    end
end)



-- ImageLabel properties
ImageLabel.Parent = Frame
ImageLabel.Image = "http://www.roblox.com/asset/?id=72338901051172"
ImageLabel.Position = UDim2.new(0.036, 0, 0, 0)
ImageLabel.Size = UDim2.new(0, 386, 0, 296)
ImageLabel.BackgroundTransparency = 1

-- Button properties
HeadThrowButton.Parent = ImageLabel
HeadThrowButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HeadThrowButton.BackgroundTransparency = 0.45
HeadThrowButton.Position = UDim2.new(0.036, 0, 0.047, 0)
HeadThrowButton.Size = UDim2.new(0, 158, 0, 50)
HeadThrowButton.Text = "HeadThrow"
HeadThrowButton.TextSize = 20
HeadThrowButton.TextColor3 = Color3.fromRGB(0, 0, 0)

FloatingHeadButton.Parent = ImageLabel
FloatingHeadButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FloatingHeadButton.BackgroundTransparency = 0.45
FloatingHeadButton.Position = UDim2.new(0.584, 0, 0.047, 0)
FloatingHeadButton.Size = UDim2.new(0, 158, 0, 50)
FloatingHeadButton.Text = "FloatingHead"
FloatingHeadButton.TextSize = 19
FloatingHeadButton.TextColor3 = Color3.fromRGB(0, 0, 0)

CrouchButton.Parent = ImageLabel
CrouchButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CrouchButton.BackgroundTransparency = 0.45
CrouchButton.Position = UDim2.new(0.036, 0, 0.292, 0)
CrouchButton.Size = UDim2.new(0, 158, 0, 50)
CrouchButton.Text = "JumpingJacks"
CrouchButton.TextSize = 17
CrouchButton.TextColor3 = Color3.fromRGB(0, 0, 0)

BangButton.Parent = ImageLabel
BangButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BangButton.BackgroundTransparency = 0.45
BangButton.Position = UDim2.new(0.584, 0, 0.292, 0)
BangButton.Size = UDim2.new(0, 158, 0, 50)
BangButton.Text = "Bang"
BangButton.TextSize = 17
BangButton.TextColor3 = Color3.fromRGB(0, 0, 0)

FreakyLegsButton.Parent = ImageLabel
FreakyLegsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FreakyLegsButton.BackgroundTransparency = 0.45
FreakyLegsButton.Position = UDim2.new(0.036, 0, 0.553, 0)
FreakyLegsButton.Size = UDim2.new(0, 158, 0, 50)
FreakyLegsButton.Text = "FreakyLegs"
FreakyLegsButton.TextSize = 17
FreakyLegsButton.TextColor3 = Color3.fromRGB(0, 0, 0)

StopAnimationsButton.Parent = ImageLabel
StopAnimationsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
StopAnimationsButton.BackgroundTransparency = 0.45
StopAnimationsButton.Position = UDim2.new(0.28, 0, 0.839, 0)
StopAnimationsButton.Size = UDim2.new(0, 158, 0, 36)
StopAnimationsButton.Text = "Stop Animations"
StopAnimationsButton.TextSize = 13
StopAnimationsButton.TextColor3 = Color3.fromRGB(0, 0, 0)

FreakylayButton.Parent = ImageLabel
FreakylayButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FreakylayButton.BackgroundTransparency = 0.45
FreakylayButton.Position = UDim2.new(0.584, 0, 0.553, 0)
FreakylayButton.Size = UDim2.new(0, 158, 0, 50)
FreakylayButton.Text = "Freakylay"
FreakylayButton.TextSize = 17
FreakylayButton.TextColor3 = Color3.fromRGB(0, 0, 0)

-- Detect if on mobile or PC
local isMobile = game:GetService("UserInputService").TouchEnabled
print(isMobile and "You are on Mobile" or "You are on PC")

-- Animation setup
local currentTrack
local isOnGround = false -- Track if the character is lying down

local function playAnimation(animationId)
    local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        -- Stop the currently playing animation
        if currentTrack then
            currentTrack:Stop()
        end

        -- Play the new animation
        local animation = Instance.new("Animation")
        animation.AnimationId = animationId
        currentTrack = humanoid:LoadAnimation(animation)
        currentTrack:Play()
    end
end

-- Function to lay the character down and play the animation
local function layDownAndPlayAnimation()
    local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    
    -- Set the character's orientation to be on their back
    humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0)
    
    -- Set the Torso and other parts to lay down
    local torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")  -- Handling older and newer rigs
    
    if torso then
        torso.CFrame = torso.CFrame * CFrame.Angles(math.rad(13), 0, 0)
    end

    -- Prevent the character from getting up
    humanoid.PlatformStand = true
    isOnGround = true -- Track the character state

    -- Play the animation (FreakyLegs animation)
    playAnimation("rbxassetid://106772613")
end

-- Function to stop all animations, reset the character, and simulate pressing '1' key
local function stopAllAnimationsAndPressOne()
    local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    
    -- Stop any current animation
    if currentTrack then
        currentTrack:Stop()
    end

    -- If the character is lying down, reset them
    if isOnGround then
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0)
        humanoid.PlatformStand = false
        isOnGround = false -- Track the reset state
    end
    
    -- Simulate pressing the '1' key
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One, false, game)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.One, false, game)
end

-- Mobile and PC support for buttons
local function handleButtonClick(button, func)
    if isMobile then
        button.TouchTap:Connect(func) -- Mobile touch input
    else
        button.MouseButton1Click:Connect(func) -- PC mouse input
    end
end

-- Button functionality for mobile and PC
handleButtonClick(HeadThrowButton, function()
    playAnimation("rbxassetid://35154961") -- HeadThrow animation ID
end)

handleButtonClick(FloatingHeadButton, function()
    playAnimation("rbxassetid://121572214") -- FloatingHead animation ID
end)

handleButtonClick(CrouchButton, function()
    playAnimation("rbxassetid://429681631") -- Crouch animation ID
end)

handleButtonClick(BangButton, function()
    playAnimation("rbxassetid://148840371") -- Bang animation ID (or Crouch if thatâ€™s the intended action)
end)

handleButtonClick(FreakyLegsButton, function()
    layDownAndPlayAnimation() -- Lay down and play the FreakyLegs animation
end)

handleButtonClick(StopAnimationsButton, function()
    stopAllAnimationsAndPressOne() -- Stop animations and press '1'
    wait(0)
    local player = game.Players.LocalPlayer
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        for _, item in pairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                item:Destroy() -- Remove the tool from the backpack
            end
        end
    end
end)

handleButtonClick(FreakylayButton, function()
    layDownAndPlayAnimation() -- Lay down and play the Freakylay animation
    wait(0)
    loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One, false, game)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.One, false, game)
end)
